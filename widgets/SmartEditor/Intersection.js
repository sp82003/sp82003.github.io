// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.15/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
define("dojo/_base/declare dojo/_base/lang dojo/Deferred jimu/BaseWidgetSetting esri/tasks/query esri/tasks/QueryTask esri/geometry/Extent esri/geometry/geometryEngine esri/SpatialReference esri/geometry/webMercatorUtils dojo/_base/array".split(" "),function(v,l,q,w,x,y,z,t,u,A,r){return v([w],{baseClass:"jimu-widget-smartEditor-widgets-intersection",layerFieldsObj:{},queriedLayers:[],layersInvolvedInIgnoreLayerRanking:[],maxToleranceForlayer:{},maxToleranceForlayerInPx:{},completeFeatures:{},postCreate:function(){this.startup();
this.layerFieldsObj={};this.queriedLayers=[];this.maxToleranceForlayer={};this.maxToleranceForlayerInPx={};this.layersInvolvedInIgnoreLayerRanking=[];this.completeFeatures=[]},startup:function(){},_canGetGeodesicBuffers:function(a){var b;b=new u(4326);return a&&A.canProject(a,b)?!0:!1},_getbufferedGeometry:function(a,b){return(a=this._canGetGeodesicBuffers(a)?t.geodesicBuffer([a],[b],"meters",!0):t.buffer([a],[b],"meters",!0))&&0<a.length?a[0]:null},getToleranceValueInMeters:function(a){var b;b=0;
a&&(a.useDefault?(b=this.defaultToleranceSettings.value,a=this.defaultToleranceSettings.unit):(b=a.value,a=a.unit),b=this.convertToMeters(b,a));return b},setMaxToleranceForLayer:function(a,b){var c;c=this.getToleranceValueInMeters(b);if(b&&"px"===b.unit&&!b.useDefault){if(b=b.value,!this.maxToleranceForlayerInPx.hasOwnProperty(a)||this.maxToleranceForlayerInPx[a]<b)this.maxToleranceForlayerInPx[a]=b}else 0<c&&(!this.maxToleranceForlayer.hasOwnProperty(a)||this.maxToleranceForlayer[a]<c)?this.maxToleranceForlayer[a]=
c:0===c&&(b=this.defaultPixelsTolerance,!this.maxToleranceForlayerInPx.hasOwnProperty(a)||this.maxToleranceForlayerInPx[a]<b)&&(this.maxToleranceForlayerInPx[a]=b)},convertToMeters:function(a,b){var c=a;switch(b){case "meters":c=a;break;case "feet":c=.3048*a;break;case "kilometers":c=1E3*a;break;case "miles":c=1609.34*a}return c},getDistinctLayers:function(a,b){var c,d,g;d=new q;c=new q;g={};this.layerFieldsObj={};this.queriedLayers=[];this.ignoreLayerRanking=!1;this.drawnGeometry=b;if(a.fieldValues){for(var e in a.fieldValues){g[e]=
[];for(var f=0;f<a.fieldValues[e].length;f++){var k=a.fieldValues[e][f];if("Intersection"===k.actionName&&k.enabled){k.ignoreLayerRanking&&(this.ignoreLayerRanking=!0);for(var h=0;h<k.fields.length;h++){var n=k.fields[h];-1===g[e].indexOf(n.layerId)&&g[e].push(n.layerId);-1===this.layersInvolvedInIgnoreLayerRanking.indexOf(n.layerId)&&k.ignoreLayerRanking&&this.layersInvolvedInIgnoreLayerRanking.push(n.layerId);this.setMaxToleranceForLayer(n.layerId,n.toleranceSettings)}}}}this._getIntersectionsForEachField(g,
b,c)}else c.resolve({});c.then(l.hitch(this,function(){var b={},c;if(a.fieldValues)for(var e in a.fieldValues){b[e]={};for(var g=0;g<a.fieldValues[e].length;g++){var h=a.fieldValues[e][g];if("Intersection"===h.actionName&&h.enabled)if(h.ignoreLayerRanking){var f=this._getClosestFeature(h.fields);b[e]=f.attr;for(var n={},k=0;k<h.fields.length;k++){var m=h.fields[k];n.hasOwnProperty(m.layerId)||(n[m.layerId]=[]);-1===n[m.layerId].indexOf(m.field)&&n[m.layerId].push(m.field)}if(f.intersectingFeatures&&
1<f.intersectingFeatures.length){var p=[];r.forEach(f.intersectingFeatures,function(a){for(var b=n[a.layerId],c=0;c<b.length;c++)if(a.attributes&&a.attributes.hasOwnProperty(b[c])){var d=a.attributes[b[c]];null!==d&&""!==d&&0>p.indexOf(d)&&p.push(d)}});1<p.length&&(c||(c={}),c[e]=p)}}else for(m=0;m<h.fields.length;m++){var l;l=h.fields[m];k=l.layerId;if(!b[e].hasOwnProperty(k)&&(f=this._getProcessedFeature(k,l.toleranceSettings))&&f.attributes){h=f.attributes;m={};m[l.field]=h[l.field];b[e][k]=m;
f.intersectingFeatures&&1<f.intersectingFeatures.length&&"esriCTUseLayerName"!==l.field&&(p=[],r.forEach(f.intersectingFeatures,function(a){a=a.attributes[l.field];null!==a&&""!==a&&0>p.indexOf(a)&&p.push(a)}),1<p.length&&(c||(c={}),c[e]=p));break}}}}d.resolve({result:b,multipleValues:c})}));return d.promise},_getIntersectingFeatures:function(a,b){var c,d,g,e;c=[];g=0;var f=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject;if(this.completeFeatures.hasOwnProperty(a)&&(e=this.completeFeatures[a],
b&&"px"!==b.unit&&(g=this.getToleranceValueInMeters(b)),0<e.length&&(g?d=this._getbufferedGeometry(this.drawnGeometry,g):this.maxToleranceForlayer.hasOwnProperty(a)&&this.maxToleranceForlayer[a]||this.maxToleranceForlayerInPx.hasOwnProperty(a)&&this.maxToleranceForlayerInPx[a]?d="point"===this.drawnGeometry.type?this.maxToleranceForlayerInPx.hasOwnProperty(a)?this.pointToExtent(this.map,this.drawnGeometry,this.maxToleranceForlayerInPx[a]):this.pointToExtent(this.map,this.drawnGeometry,this.defaultPixelsTolerance):
this.drawnGeometry:c=e,d)))for(a=0;a<e.length;a++)b=e[a],b.geometry&&t.intersects(d,b.geometry)&&(b.attributes.esriCTUseLayerName=f.name,c.push(b));return c},_getClosestFeature:function(a){var b,c,d,g,e,f=[],k;b={};a=this._resetFieldsWithMapLayerOrder(a);for(g=0;g<a.length;g++){var h=[];d=a[g].layerId;h=this._getIntersectingFeatures(d,a[g].toleranceSettings);for(e=0;e<h.length;e++)this.drawnGeometry&&h[e].geometry&&(h[e].distanceToLocation=t.distance(this.drawnGeometry,h[e].geometry,"meters")),h[e].layerId=
d,h[e].fields?h[e].fields.push(a[g].field):h[e].fields=[a[g].field];f=f.concat(h)}0<f.length&&(f.sort(function(a,b){return a.distanceToLocation<b.distanceToLocation?-1:a.distanceToLocation>b.distanceToLocation?1:0}),c=f[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(f[0].layerId).layerObject,c.esriCTUseLayerName=a.name,k={},r.forEach(f[0].fields,function(a){k[a]=c[a]}),b[f[0].layerId]=k);return{attr:b,intersectingFeatures:f}},_resetFieldsWithMapLayerOrder:function(a){var b,c=[];b=this._jimuLayerInfos.getLayerInfoArray();
r.forEach(b,l.hitch(this,function(b){r.forEach(a,l.hitch(this,function(a){b.id===a.layerId&&c.push(a)}))}));return c},_getProcessedFeature:function(a,b){var c,d;d=[];d=this._getIntersectingFeatures(a,b);0<d.length&&(c=d[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject,c.esriCTUseLayerName=a.name);return{attributes:c,intersectingFeatures:d}},_getIntersectionsForEachField:function(a,b,c){var d,g;d=Object.keys(a);g=0;this.maxToleranceForlayer&&(g=Object.keys(this.maxToleranceForlayer).length);
if(0<d.length){var e=d[0];(this.ignoreLayerRanking||0<g?this._asyncIntersectionRequests(a[e],b):this._syncIntersectionRequests(a[e],b)).then(l.hitch(this,function(){this.ignoreLayerRanking||0<g?a[e]&&0===a[e].length&&delete a[e]:delete a[e];this._getIntersectionsForEachField(a,b,c)}))}else c.resolve()},_filterQueriedLayers:function(a){for(var b in this.layerFieldsObj){var c=a.indexOf(b);-1<c&&a.splice(c,1)}return a},_asyncIntersectionRequests:function(a,b,c){c||(c=new q);a=this._filterQueriedLayers(a);
0<a.length?this._getIntersectedFeatures(a[0],b).then(l.hitch(this,function(d){a.splice(0,1);0<a.length?(this._asyncIntersectionRequests(a,b,c),this._intersectionResult(d)):this._intersectionResult(d,c)})):c.resolve();return c.promise},_syncIntersectionRequests:function(a,b,c){c||(c=new q);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(l.hitch(this,function(d){0<d.features.length?this._intersectionResult(d,c):(a.splice(0,1),0<a.length?this._syncIntersectionRequests(a,
b,c):this._intersectionResult(d,c))})):c.resolve();return c.promise},_intersectionResult:function(a,b){a.layerId&&(this.layerFieldsObj[a.layerId]={},a.features&&0<a.features.length&&(this.layerFieldsObj[a.layerId]=a.featuresAttributes));b&&b.resolve()},pointToExtent:function(a,b,c){if(0===c)return b;var d=a.extent.getWidth()/a.width;c*=d;return new z(b.x-c,b.y-c,b.x+c,b.y+c,a.spatialReference)},_getAppropriateGeometryForQuery:function(a,b){var c;this.maxToleranceForlayer.hasOwnProperty(a)?c=this._getbufferedGeometry(b,
this.maxToleranceForlayer[a]):(c=b,"point"===b.type&&(c=this.maxToleranceForlayerInPx.hasOwnProperty(a)?this.pointToExtent(this.map,b,this.maxToleranceForlayerInPx[a]):this.pointToExtent(this.map,b,this.defaultPixelsTolerance)));return c},_getIntersectedFeatures:function(a,b){var c,d,g,e,f,k;c=new q;if(this._jimuLayerInfos.getLayerOrTableInfoById(a))f=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject;else return c.resolve({layerId:a,features:[],featuresAttributes:{}}),c.promise;k=f.objectIdField;
d=new x;g=new y(f.url);d.geometry=this._getAppropriateGeometryForQuery(a,b);d.outFields=["*"];if(f=f.getDefinitionExpression())d.where=f;-1<this.layersInvolvedInIgnoreLayerRanking.indexOf(a)||this.maxToleranceForlayer.hasOwnProperty(a)||this.maxToleranceForlayerInPx.hasOwnProperty(a)?(d.returnGeometry=!0,d.outSpatialReference=new u(b.spatialReference.toJson())):d.returnGeometry=!1;g.execute(d,l.hitch(this,function(b){b&&b.features&&0<b.features.length?(b.features.sort(function(a,b){a=parseInt(a.attributes[k],
10);b=parseInt(b.attributes[k],10);return a>b?-1:1}),e=b.features[0].attributes):(b={features:[]},e={});this.completeFeatures[a]=b.features;c.resolve({layerId:a,features:b.features,featuresAttributes:e})}),l.hitch(this,function(){this.completeFeatures[a]=[];c.resolve({layerId:a,features:[],featuresAttributes:{}})}));return c.promise}})});